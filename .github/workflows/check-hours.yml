name: Check TMetric Hours

on:
  # Permitir ejecución manual desde GitHub UI
  workflow_dispatch:
    inputs:
      notify:
        description: 'Send notification if users found'
        required: false
        default: 'true'
        type: boolean

  # Ejecución automática con cron (comentado por defecto)
  # Descomenta para habilitar ejecución automática
  # schedule:
  #   # Ejecutar de lunes a viernes a las 6 PM (18:00 UTC)
  #   - cron: '0 18 * * 1-5'

jobs:
  check-hours:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check TMetric Hours
        id: check
        run: |
          echo "Calling TMetric API..."

          response=$(curl -s -w "\n%{http_code}" -X POST \
            "${{ secrets.APP_URL }}/api/cron/check-hours" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.API_SECRET }}")

          http_code=$(echo "$response" | tail -n1)
          body=$(echo "$response" | head -n-1)

          echo "HTTP Status: $http_code"
          echo "Response: $body"

          if [ "$http_code" != "200" ]; then
            echo "Error: API returned status $http_code"
            echo "$body"
            exit 1
          fi

          # Guardar respuesta para próximos pasos
          echo "$body" > response.json

          # Extraer información
          total_users=$(echo "$body" | jq -r '.data.totalUsers // 0')
          echo "total_users=$total_users" >> $GITHUB_OUTPUT

          echo "Found $total_users users without hours"

      - name: Upload results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: check-hours-results
          path: response.json
          retention-days: 30

      - name: Send notification (if users found)
        if: steps.check.outputs.total_users > 0 && inputs.notify == 'true'
        run: |
          echo "⚠️ ALERTA: Se encontraron ${{ steps.check.outputs.total_users }} usuarios sin horas registradas"
          # Aquí puedes agregar notificaciones (Slack, email, etc.)
          # Ejemplo para Slack (descomentar y configurar SLACK_WEBHOOK_URL):
          # curl -X POST ${{ secrets.SLACK_WEBHOOK_URL }} \
          #   -H 'Content-Type: application/json' \
          #   -d '{"text":"⚠️ RRHH Alert: ${{ steps.check.outputs.total_users }} usuarios sin horas registradas"}'

      - name: Create Issue (if users found)
        if: steps.check.outputs.total_users > 0
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const data = JSON.parse(fs.readFileSync('response.json', 'utf8'));

            const users = data.data.usersWithoutHours.map(u =>
              `- **${u.name}**: ${u.daysWithoutEntries || '?'} días sin registros (Último: ${u.lastEntry || 'Sin registros'})`
            ).join('\n');

            const body = `## ⚠️ Usuarios sin horas registradas

**Período verificado:** ${data.data.dateRange.from} - ${data.data.dateRange.to}
**Total de usuarios:** ${data.data.totalUsers}
**Fecha de verificación:** ${new Date(data.data.checkedAt).toLocaleString('es-ES')}

### Usuarios detectados:

${users}

---
*Esta issue fue creada automáticamente por GitHub Actions*`;

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `⚠️ ${data.data.totalUsers} usuarios sin horas - ${data.data.dateRange.from}`,
              body: body,
              labels: ['automated', 'rrhh', 'hours-check']
            });
